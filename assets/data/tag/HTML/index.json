{"hash":"1384ca8ce754c4a16ace18c07a7609942d63a193","data":{"tag":{"title":"HTML","belongsTo":{"edges":[{"node":{"title":"MutationObserver - DOM 변경 감지","path":"/mutation-observer/","date":"4. February 2020","timeToRead":2,"description":"Web API 중 하나인 MutationObserver의 기능과 용도를 간단한 예제 코드와 함께 알아본다.","content":"<p>예전에 이미지 업로드를 구현할 일이 있었는데, 이미지가 10장을 초과하면 최대 10장까지라는 토스트 메시지를 표시하는 것과 이미지를 1024 이하로 resizing 해야 하는 요구사항이 있었다.</p>\n<p>토스트를 호출하는 로직과 img와 canvas를 활용한 이미지 resizing 로직을 구현 후 테스트를 진행했는데, 불필요한 렌더링이 발생하여 페이지가 깜빡거리거나 토스트가 버벅이며 올라오는 등의 현상이 있었다.</p>\n<p>이는 별개의 두 로직이 DOM에 동시에 접근하다보니 생긴 현상이었다. 문제 해결을 위해 조사하던 중 MutationObserver 라는 Web API가 있다는 것을 알게 됐다.</p>\n<hr>\n<h1 id=\"mutationobserver\"><a href=\"#mutationobserver\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MutationObserver</h1>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/MutationObserver\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MutationObserver</a>는 DOM 트리의 변경을 감시하는 기능을 제공한다. 아래는 MDN에서 제공하는 예제 코드이다.</p>\n<div>\n    <div id=\"gist101533940\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-example-mutationobserver-js\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper data type-javascript \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-example-mutationobserver-js-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>/** https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver */</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-example-mutationobserver-js-LC2\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-example-mutationobserver-js-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 감시할 대상 Node</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-example-mutationobserver-js-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>const</span> <span class=pl-s1>targetNode</span> <span class=pl-c1>=</span> <span class=pl-smi>document</span><span class=pl-kos>.</span><span class=pl-en>getElementById</span><span class=pl-kos>(</span><span class=pl-s>&#39;some-id&#39;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-example-mutationobserver-js-LC5\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-example-mutationobserver-js-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 감시자 설정</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-example-mutationobserver-js-LC7\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>const</span> <span class=pl-s1>config</span> <span class=pl-c1>=</span> <span class=pl-kos>{</span> <span class=pl-c1>attributes</span>: <span class=pl-c1>true</span><span class=pl-kos>,</span> <span class=pl-c1>childList</span>: <span class=pl-c1>true</span><span class=pl-kos>,</span> <span class=pl-c1>subtree</span>: <span class=pl-c1>true</span> <span class=pl-kos>}</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-example-mutationobserver-js-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-example-mutationobserver-js-LC9\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 변경이 감지되었을 때 실행할 Callback function</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-example-mutationobserver-js-LC10\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>const</span> <span class=pl-en>callback</span> <span class=pl-c1>=</span> <span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>mutationsList</span><span class=pl-kos>,</span> <span class=pl-s1>observer</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-example-mutationobserver-js-LC11\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>let</span> <span class=pl-s1>mutation</span> <span class=pl-k>of</span> <span class=pl-s1>mutationsList</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-example-mutationobserver-js-LC12\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-s1>mutation</span><span class=pl-kos>.</span><span class=pl-c1>type</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;childList&#39;</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-example-mutationobserver-js-LC13\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&#39;A child node has been added or removed.&#39;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-example-mutationobserver-js-LC14\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-example-mutationobserver-js-LC15\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-k>else</span> <span class=pl-k>if</span> <span class=pl-kos>(</span><span class=pl-s1>mutation</span><span class=pl-kos>.</span><span class=pl-c1>type</span> <span class=pl-c1>===</span> <span class=pl-s>&#39;attributes&#39;</span><span class=pl-kos>)</span> <span class=pl-kos>{</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-example-mutationobserver-js-LC16\" class=\"blob-code blob-code-inner js-file-line\">      <span class=pl-smi>console</span><span class=pl-kos>.</span><span class=pl-en>log</span><span class=pl-kos>(</span><span class=pl-s>&#39;The &#39;</span> <span class=pl-c1>+</span> <span class=pl-s1>mutation</span><span class=pl-kos>.</span><span class=pl-c1>attributeName</span> <span class=pl-c1>+</span> <span class=pl-s>&#39; attribute was modified.&#39;</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-example-mutationobserver-js-LC17\" class=\"blob-code blob-code-inner js-file-line\">    <span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-example-mutationobserver-js-LC18\" class=\"blob-code blob-code-inner js-file-line\">  <span class=pl-kos>}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-example-mutationobserver-js-LC19\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-kos>}</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-example-mutationobserver-js-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-example-mutationobserver-js-LC21\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 감시자 인스턴스 생성</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-example-mutationobserver-js-LC22\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-k>const</span> <span class=pl-s1>observer</span> <span class=pl-c1>=</span> <span class=pl-k>new</span> <span class=pl-v>MutationObserver</span><span class=pl-kos>(</span><span class=pl-en>callback</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-example-mutationobserver-js-LC23\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-example-mutationobserver-js-LC24\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 감시할 대상 Node를 전달하여 감시 시작</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-example-mutationobserver-js-LC25\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s1>observer</span><span class=pl-kos>.</span><span class=pl-en>observe</span><span class=pl-kos>(</span><span class=pl-s1>targetNode</span><span class=pl-kos>,</span> <span class=pl-s1>config</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-example-mutationobserver-js-LC26\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-example-mutationobserver-js-LC27\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-c>// 감시 종료</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-example-mutationobserver-js-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-example-mutationobserver-js-LC28\" class=\"blob-code blob-code-inner js-file-line\"><span class=pl-s1>observer</span><span class=pl-kos>.</span><span class=pl-en>disconnect</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/perade/def10d403bb2cbc16313357934a01ca3/raw/5f5f05f631faa2e847e9370734138d7db0630052/example-MutationObserver.js\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/perade/def10d403bb2cbc16313357934a01ca3#file-example-mutationobserver-js\">example-MutationObserver.js</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div>\n</div>\n<p>코드를 보면 사용이 굉장히 간단한 것을 확인할 수 있다. 큰 흐름은 아래와 같다.</p>\n<ul>\n<li>감시할 대상을 정함</li>\n<li>감시자를 생성</li>\n<li>필요에 따라 감시를 ON / OFF</li>\n</ul>\n<p>특정 DOM Node를 observe 함수를 실행하여 감시하고 있다가 해당 Node가 변경되면 Callback 함수를 실행하여 원하는 동작을 취할 수 있다. observe 함수 실행 시 옵션을 같이 전달할 수 있는데, 옵션 이름을 보면 해당 옵션이 어떤 목적인지 쉽게 유추할 수 있다. (attributes: true 는 id, class 등 해당 Node의 속성 변경을 감시, childList: true 는 해당 Node의 자식들이 변경되는지 감시 등)</p>\n<hr>\n<p>다시 예전으로 돌아가서, 필자는 당시 MutationObserver를 활용하여 이미지 resizing을 위한 canvas 엘리먼트가 생성되었음을 확인한 후 필요에 따라 토스트를 호출하는 식으로 로직을 수정하여 문제를 해결하였다.</p>\n<p>이처럼 DOM 변경에 따라 실행되어야 하는 동작이 있을 경우 MutationObserver를 유용하게 활용할 수 있다. 또한 Vue.js나 React.js와 같은 SPA 도구들에 의존하는 경우 가상 DOM을 거치기 때문에 애플리케이션의 규모나 복잡도가 높으면 각 컴포넌트들의 실제 DOM 반영 시점을 알기 어려운 경우가 종종 있다. 이러한 경우 MutationObserver를 활용한 디버깅용 Wrapper를 만들어 필요에 따라 활용할 수도 있다.</p>\n<hr>\n<h3 id=\"references\"><a href=\"#references\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>References</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/MutationObserver\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/API/MutationObserver</a></li>\n</ul>\n"}}]}}},"context":{}}